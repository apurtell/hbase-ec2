#!/usr/bin/env bash

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Launch an EC2 HBase slaves.
set -x

if [ -z $1 ]; then
  echo "Cluster name required!"
  exit 1
fi

CLUSTER=$1

if [ -z $2 ]; then
  echo "Must specify the number of slaves to start."
  exit 1
fi

NUM_SLAVES=$2

# Import variables
bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
. "$bin"/hbase-ec2-env.sh

if [ ! -f $MASTER_ADDR_PATH ]; then
  echo "Must start Cluster Master first!"
  exit 1
fi

[ -z "$AMI_IMAGE" ] && AMI_IMAGE=`ec2-describe-images $TOOL_OPTS -o self | grep hbase | grep $HBASE_VERSION-$SLAVE_ARCH |grep available | awk '{print $2}'`

if [ -z "$AMI_IMAGE" ]; then
    echo "No AMI IMAGE FOUND - please check your AMI list : https://console.aws.amazon.com/ec2/home#c=EC2&s=Images"
    exit 1
fi

master=`cat $MASTER_ADDR_PATH`
zone=`cat $MASTER_ZONE_PATH`
quorum=`cat $ZOOKEEPER_QUORUM_PATH`

# Substituting master hostname and zookeeper quorum
sed -e "s|%MASTER_HOST%|$master|" \
    -e "s|%NUM_SLAVES%|$NUM_SLAVES|" \
    -e "s|%ZOOKEEPER_QUORUM%|$quorum|" \
    -e "s|%EXTRA_PACKAGES%|$EXTRA_PACKAGES|" \
    "$bin"/$USER_DATA_FILE > "$bin"/$USER_DATA_FILE.slave

# Start slaves
echo "Starting $NUM_SLAVES AMI(s) with ID $AMI_IMAGE (arch $SLAVE_ARCH) in group $CLUSTER in zone $zone"
ec2-run-instances $TOOL_OPTS $AMI_IMAGE -n "$NUM_SLAVES" -g "$CLUSTER" -k root -f "$bin"/$USER_DATA_FILE.slave -t "$SLAVE_INSTANCE_TYPE" -z "$zone" | grep INSTANCE | awk '{print $2}' > $SLAVE_INSTANCES_PATH

rm "$bin"/$USER_DATA_FILE.slave
