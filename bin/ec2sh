#!/usr/bin/env ruby

# Amazon Web Services EC2 Query API Ruby library
#
# Ruby Gem Name::  amazon-ec2
# Author::    Glenn Rempe  (mailto:glenn@rempe.us)
# Copyright:: Copyright (c) 2007-2008 Glenn Rempe
# License::   Distributes under the same terms as Ruby
# Home::      http://github.com/grempe/amazon-ec2/tree/master
#++

# CREDITS : Credit for this bit of shameful ripoff coolness
# goes to Marcel Molina and his AWS::S3 gem.  Thanks!

# Usage : running this starts up an irb session and
# sets up the connection to EC2 as a class variable called
# '@ec2'.  So just do something like the following on the
# shell command line:

#   macbook-pro:~ glenn$ ec2sh
#   >> @ec2.describe_images
#   => [#<AWS::EC2::Item image_location...

hbase_ec2_lib   = File.dirname(__FILE__) + '/../lib/hcluster'
setup = File.dirname(__FILE__) + '/setup'
irb_name = RUBY_PLATFORM =~ /mswin32/ ? 'irb.bat' : 'irb'
if ( ENV['AWS_ACCESS_KEY_ID'] )
  ENV['AMAZON_ACCESS_KEY_ID'] = ENV['AWS_ACCESS_KEY_ID']
end
if ( ENV['AWS_SECRET_ACCESS_KEY'] )
  ENV['AMAZON_SECRET_ACCESS_KEY'] = ENV['AWS_SECRET_ACCESS_KEY']
end

if ( ENV['AMAZON_ACCESS_KEY_ID'] && ENV['AMAZON_SECRET_ACCESS_KEY'] )

  if ( ARGV.length == 0 )
    welcome_message = <<-MESSAGE

  'ec2sh' usage :
  This is an interactive 'irb' command shell that allows you to use all
  commands available to the amazon-ec2 gem and hcluster lib.  You'll find 
  this to be a great tool to help you debug issues and practice running 
  commands against the live EC2 servers prior to putting them in your code.

  The hcluster module is aliased as '@hcluster'.  To create a new cluster,
  try:

  >> cluster = @hcluster.new :label => 'AMI name' 

  Available options: (default)
      :label (nil) (see HCluster.my_images for a list of labels)
      :hbase_version (ENV['HBASE_VERSION'])
      :num_regionservers  (3)
      :num_zookeepers  (1)
      :launch_aux  (false)
      :zk_arch  (x86_64)
      :master_arch  (x86_64)
      :slave_arch  (x86_64)
      :debug_level  (@@debug_level)
      :validate_images  (true)
      :security_group_prefix (hcluster)
      :availability_zone (let AWS choose)

  MESSAGE

    puts welcome_message
  end
  exec "#{irb_name} -rubygems -r #{hbase_ec2_lib} -r #{setup} --simple-prompt #{ARGV}"
else
  puts "You must define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY as shell environment variables before running #{$0}!"
end
